
package field

// ---- auto generated by baseTypeBuilder_test.go, NOT modify this file ----

import (
  "github.com/xpwu/go-db-mongo/mongodb/filter"
  "github.com/xpwu/go-db-mongo/mongodb/updater"
  
  
)

type Float640F struct {
  *Float640FUpdaterF
  *baseKey
  *Float640FFilterF
}

func (a *Float640F) FullName() string {
  return a.baseKey.FullName()
}

type Float640FUpdaterF struct {
  *baseUpdater
}

type Float640FFilterF struct {
  *baseFilter
}

func NewFloat640F(fName string) *Float640F {
  uper := &Float640FUpdaterF{&baseUpdater{&base{fName}}}
  pri := &baseKey{uper.base}
  flt := &Float640FFilterF{&baseFilter{uper.base}}

  return &Float640F{uper, pri, flt}
}









func (i *Float640FFilterF) Gt(value float64) filter.Filter {
 return filter.CompareByValue(i, filter.GT, value)
}

func (i *Float640FFilterF) Lt(value float64) filter.Filter {
 return filter.CompareByValue(i, filter.LT, value)
}

func (i *Float640FFilterF) GtField(f *Float640F) filter.Filter {
 return filter.CompareByValue(i, filter.GT, f)
}

func (i *Float640FFilterF) LtField(f *Float640F) filter.Filter {
 return filter.CompareByValue(i, filter.LT, f)
}

func (i *Float640FFilterF) In(values []float64) filter.Filter {
 return filter.New(i, "$in", values)
}

func (i *Float640FFilterF) Nin(values []float64) filter.Filter {
 return filter.New(i, "$nin", values)
}

func (i *Float640FUpdaterF) Min(value float64) updater.Updater {
  return updater.New(i, "$min", value)
}

func (i *Float640FUpdaterF) Max(value float64) updater.Updater {
  return updater.New(i, "$max", value)
}

func (i *Float640FUpdaterF) Set(value float64) updater.Updater {
  return updater.New(i, "$set", value)
}

func (i *Float640FUpdaterF) SetOnIns(value float64) updater.Updater {
  return updater.New(i, "$setOnInsert", value)
}

