
package field

// ---- auto generated by baseTypeBuilder_test.go, NOT modify this file ----

import (
  "github.com/xpwu/go-db-mongo/mongodb/filter"
  "github.com/xpwu/go-db-mongo/mongodb/updater"
  
  "go.mongodb.org/mongo-driver/bson/primitive"
)

type Decimal1280F struct {
  *Decimal1280FUpdaterF
  *baseKey
  *Decimal1280FFilterF
}

func (a *Decimal1280F) FullName() string {
  return a.baseKey.FullName()
}

type Decimal1280FUpdaterF struct {
  *baseUpdater
}

type Decimal1280FFilterF struct {
  *baseFilter
}

func NewDecimal1280F(fName string) *Decimal1280F {
  uper := &Decimal1280FUpdaterF{&baseUpdater{&base{fName}}}
  pri := &baseKey{uper.base}
  flt := &Decimal1280FFilterF{&baseFilter{uper.base}}

  return &Decimal1280F{uper, pri, flt}
}




func (i *Decimal1280FUpdaterF) Inc(num primitive.Decimal128) updater.Updater {
 return updater.New(i, "$inc", num)
}

func (i *Decimal1280FUpdaterF) Mul(num primitive.Decimal128) updater.Updater {
 return updater.New(i, "$mul", num)
}






func (i *Decimal1280FFilterF) Gt(value primitive.Decimal128) filter.Filter {
 return filter.CompareByValue(i, filter.GT, value)
}

func (i *Decimal1280FFilterF) Lt(value primitive.Decimal128) filter.Filter {
 return filter.CompareByValue(i, filter.LT, value)
}

func (i *Decimal1280FFilterF) GtField(f *Decimal1280F) filter.Filter {
 return filter.CompareByValue(i, filter.GT, f)
}

func (i *Decimal1280FFilterF) LtField(f *Decimal1280F) filter.Filter {
 return filter.CompareByValue(i, filter.LT, f)
}

func (i *Decimal1280FFilterF) In(values []primitive.Decimal128) filter.Filter {
 return filter.New(i, "$in", values)
}

func (i *Decimal1280FFilterF) Nin(values []primitive.Decimal128) filter.Filter {
 return filter.New(i, "$nin", values)
}

func (i *Decimal1280FUpdaterF) Min(value primitive.Decimal128) updater.Updater {
  return updater.New(i, "$min", value)
}

func (i *Decimal1280FUpdaterF) Max(value primitive.Decimal128) updater.Updater {
  return updater.New(i, "$max", value)
}

func (i *Decimal1280FUpdaterF) Set(value primitive.Decimal128) updater.Updater {
  return updater.New(i, "$set", value)
}

func (i *Decimal1280FUpdaterF) SetOnIns(value primitive.Decimal128) updater.Updater {
  return updater.New(i, "$setOnInsert", value)
}

