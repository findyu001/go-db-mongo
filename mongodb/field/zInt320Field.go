
package field

// ---- auto generated by baseTypeBuilder_test.go, NOT modify this file ----

import (
  "github.com/xpwu/go-db-mongo/mongodb/filter"
  "github.com/xpwu/go-db-mongo/mongodb/updater"
  "go.mongodb.org/mongo-driver/bson"
  
)

type Int320F struct {
  *Int320FUpdaterF
  *baseKey
  *Int320FFilterF
}

func (a *Int320F) FullName() string {
  return a.baseKey.FullName()
}

type Int320FUpdaterF struct {
  *baseUpdater
}

type Int320FFilterF struct {
  *baseFilter
}

func NewInt320F(fName string) *Int320F {
  uper := &Int320FUpdaterF{&baseUpdater{&base{fName}}}
  pri := &baseKey{uper.base}
  flt := &Int320FFilterF{&baseFilter{uper.base}}

  return &Int320F{uper, pri, flt}
}


func (i *Int320FFilterF) Mod(divisor, remainder int32) filter.Filter {
 return filter.New(i, "$mod", bson.A{divisor, remainder})
}



func (i *Int320FUpdaterF) Inc(num int32) updater.Updater {
 return updater.New(i, "$inc", num)
}

func (i *Int320FUpdaterF) Mul(num int32) updater.Updater {
 return updater.New(i, "$mul", num)
}



func (i *Int320FFilterF) Eq(value int32) filter.Filter {
 return filter.CompareByValue(i, filter.EQ, value)
}

func (i *Int320FFilterF) Ne(value int32) filter.Filter {
 return filter.CompareByValue(i, filter.NE, value)
}

func (i *Int320FFilterF) NeField(f *Int320F) filter.Filter {
 return filter.CompareByField(i, filter.NE, f)
}

func (i *Int320FFilterF) EqField(f *Int320F) filter.Filter {
 return filter.CompareByField(i, filter.EQ, f)
}

func (i *Int320FFilterF) Gte(value int32) filter.Filter {
 return filter.CompareByValue(i, filter.GTE, value)
}

func (i *Int320FFilterF) Lte(value int32) filter.Filter {
 return filter.CompareByValue(i, filter.LTE, value)
}

func (i *Int320FFilterF) GteField(f *Int320F) filter.Filter {
 return filter.CompareByValue(i, filter.GTE, f)
}

func (i *Int320FFilterF) LteField(f *Int320F) filter.Filter {
 return filter.CompareByValue(i, filter.LTE, f)
}




func (i *Int320FFilterF) Gt(value int32) filter.Filter {
 return filter.CompareByValue(i, filter.GT, value)
}

func (i *Int320FFilterF) Lt(value int32) filter.Filter {
 return filter.CompareByValue(i, filter.LT, value)
}

func (i *Int320FFilterF) GtField(f *Int320F) filter.Filter {
 return filter.CompareByValue(i, filter.GT, f)
}

func (i *Int320FFilterF) LtField(f *Int320F) filter.Filter {
 return filter.CompareByValue(i, filter.LT, f)
}

func (i *Int320FFilterF) In(values []int32) filter.Filter {
 return filter.New(i, "$in", values)
}

func (i *Int320FFilterF) Nin(values []int32) filter.Filter {
 return filter.New(i, "$nin", values)
}

func (i *Int320FUpdaterF) Min(value int32) updater.Updater {
  return updater.New(i, "$min", value)
}

func (i *Int320FUpdaterF) Max(value int32) updater.Updater {
  return updater.New(i, "$max", value)
}

func (i *Int320FUpdaterF) Set(value int32) updater.Updater {
  return updater.New(i, "$set", value)
}

func (i *Int320FUpdaterF) SetOnIns(value int32) updater.Updater {
  return updater.New(i, "$setOnInsert", value)
}

